{
  "version": 3,
  "sources": ["../../../../../../node_modules/prosemirror-dropcursor/dist/index.js", "../../../../../../node_modules/@tiptap/extension-dropcursor/dist/index.js"],
  "sourcesContent": ["import { Plugin } from 'prosemirror-state';\nimport { dropPoint } from 'prosemirror-transform';\n\n/**\nCreate a plugin that, when added to a ProseMirror instance,\ncauses a decoration to show up at the drop position when something\nis dragged over the editor.\n\nNodes may add a `disableDropCursor` property to their spec to\ncontrol the showing of a drop cursor inside them. This may be a\nboolean or a function, which will be called with a view and a\nposition, and should return a boolean.\n*/\nfunction dropCursor(options = {}) {\n  return new Plugin({\n    view(editorView) {\n      return new DropCursorView(editorView, options);\n    }\n  });\n}\nclass DropCursorView {\n  constructor(editorView, options) {\n    var _a;\n    this.editorView = editorView;\n    this.cursorPos = null;\n    this.element = null;\n    this.timeout = -1;\n    this.width = (_a = options.width) !== null && _a !== void 0 ? _a : 1;\n    this.color = options.color === false ? undefined : options.color || \"black\";\n    this.class = options.class;\n    this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(name => {\n      let handler = e => {\n        this[name](e);\n      };\n      editorView.dom.addEventListener(name, handler);\n      return {\n        name,\n        handler\n      };\n    });\n  }\n  destroy() {\n    this.handlers.forEach(({\n      name,\n      handler\n    }) => this.editorView.dom.removeEventListener(name, handler));\n  }\n  update(editorView, prevState) {\n    if (this.cursorPos != null && prevState.doc != editorView.state.doc) {\n      if (this.cursorPos > editorView.state.doc.content.size) this.setCursor(null);else this.updateOverlay();\n    }\n  }\n  setCursor(pos) {\n    if (pos == this.cursorPos) return;\n    this.cursorPos = pos;\n    if (pos == null) {\n      this.element.parentNode.removeChild(this.element);\n      this.element = null;\n    } else {\n      this.updateOverlay();\n    }\n  }\n  updateOverlay() {\n    let $pos = this.editorView.state.doc.resolve(this.cursorPos);\n    let isBlock = !$pos.parent.inlineContent,\n      rect;\n    if (isBlock) {\n      let before = $pos.nodeBefore,\n        after = $pos.nodeAfter;\n      if (before || after) {\n        let node = this.editorView.nodeDOM(this.cursorPos - (before ? before.nodeSize : 0));\n        if (node) {\n          let nodeRect = node.getBoundingClientRect();\n          let top = before ? nodeRect.bottom : nodeRect.top;\n          if (before && after) top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2;\n          rect = {\n            left: nodeRect.left,\n            right: nodeRect.right,\n            top: top - this.width / 2,\n            bottom: top + this.width / 2\n          };\n        }\n      }\n    }\n    if (!rect) {\n      let coords = this.editorView.coordsAtPos(this.cursorPos);\n      rect = {\n        left: coords.left - this.width / 2,\n        right: coords.left + this.width / 2,\n        top: coords.top,\n        bottom: coords.bottom\n      };\n    }\n    let parent = this.editorView.dom.offsetParent;\n    if (!this.element) {\n      this.element = parent.appendChild(document.createElement(\"div\"));\n      if (this.class) this.element.className = this.class;\n      this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none;\";\n      if (this.color) {\n        this.element.style.backgroundColor = this.color;\n      }\n    }\n    this.element.classList.toggle(\"prosemirror-dropcursor-block\", isBlock);\n    this.element.classList.toggle(\"prosemirror-dropcursor-inline\", !isBlock);\n    let parentLeft, parentTop;\n    if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n      parentLeft = -pageXOffset;\n      parentTop = -pageYOffset;\n    } else {\n      let rect = parent.getBoundingClientRect();\n      parentLeft = rect.left - parent.scrollLeft;\n      parentTop = rect.top - parent.scrollTop;\n    }\n    this.element.style.left = rect.left - parentLeft + \"px\";\n    this.element.style.top = rect.top - parentTop + \"px\";\n    this.element.style.width = rect.right - rect.left + \"px\";\n    this.element.style.height = rect.bottom - rect.top + \"px\";\n  }\n  scheduleRemoval(timeout) {\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => this.setCursor(null), timeout);\n  }\n  dragover(event) {\n    if (!this.editorView.editable) return;\n    let pos = this.editorView.posAtCoords({\n      left: event.clientX,\n      top: event.clientY\n    });\n    let node = pos && pos.inside >= 0 && this.editorView.state.doc.nodeAt(pos.inside);\n    let disableDropCursor = node && node.type.spec.disableDropCursor;\n    let disabled = typeof disableDropCursor == \"function\" ? disableDropCursor(this.editorView, pos, event) : disableDropCursor;\n    if (pos && !disabled) {\n      let target = pos.pos;\n      if (this.editorView.dragging && this.editorView.dragging.slice) {\n        let point = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice);\n        if (point != null) target = point;\n      }\n      this.setCursor(target);\n      this.scheduleRemoval(5000);\n    }\n  }\n  dragend() {\n    this.scheduleRemoval(20);\n  }\n  drop() {\n    this.scheduleRemoval(20);\n  }\n  dragleave(event) {\n    if (event.target == this.editorView.dom || !this.editorView.dom.contains(event.relatedTarget)) this.setCursor(null);\n  }\n}\nexport { dropCursor };", "import { Extension } from '@tiptap/core';\nimport { dropCursor } from '@tiptap/pm/dropcursor';\n\n/**\n * This extension allows you to add a drop cursor to your editor.\n * A drop cursor is a line that appears when you drag and drop content\n * inbetween nodes.\n * @see https://tiptap.dev/api/extensions/dropcursor\n */\nconst Dropcursor = Extension.create({\n  name: 'dropCursor',\n  addOptions() {\n    return {\n      color: 'currentColor',\n      width: 1,\n      class: undefined\n    };\n  },\n  addProseMirrorPlugins() {\n    return [dropCursor(this.options)];\n  }\n});\nexport { Dropcursor, Dropcursor as default };\n"],
  "mappings": "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",
  "names": ["rect"]
}
