{
  "version": 3,
  "sources": ["../../../../../../node_modules/@tiptap/extension-blockquote/dist/index.js"],
  "sourcesContent": ["import { Node, mergeAttributes, wrappingInputRule } from '@tiptap/core';\n\n/**\n * Matches a blockquote to a `>` as input.\n */\nconst inputRegex = /^\\s*>\\s$/;\n/**\n * This extension allows you to create blockquotes.\n * @see https://tiptap.dev/api/nodes/blockquote\n */\nconst Blockquote = Node.create({\n  name: 'blockquote',\n  addOptions() {\n    return {\n      HTMLAttributes: {}\n    };\n  },\n  content: 'block+',\n  group: 'block',\n  defining: true,\n  parseHTML() {\n    return [{\n      tag: 'blockquote'\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['blockquote', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands() {\n    return {\n      setBlockquote: () => ({\n        commands\n      }) => {\n        return commands.wrapIn(this.name);\n      },\n      toggleBlockquote: () => ({\n        commands\n      }) => {\n        return commands.toggleWrap(this.name);\n      },\n      unsetBlockquote: () => ({\n        commands\n      }) => {\n        return commands.lift(this.name);\n      }\n    };\n  },\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-b': () => this.editor.commands.toggleBlockquote()\n    };\n  },\n  addInputRules() {\n    return [wrappingInputRule({\n      find: inputRegex,\n      type: this.type\n    })];\n  }\n});\nexport { Blockquote, Blockquote as default, inputRegex };\n"],
  "mappings": ";;;;;;;;;AAKA,IAAM,aAAa;AAKnB,IAAM,aAAa,KAAK,OAAO;AAAA,EAC7B,MAAM;AAAA,EACN,aAAa;AACX,WAAO;AAAA,MACL,gBAAgB,CAAC;AAAA,IACnB;AAAA,EACF;AAAA,EACA,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU;AAAA,EACV,YAAY;AACV,WAAO,CAAC;AAAA,MACN,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AAAA,EACA,WAAW;AAAA,IACT;AAAA,EACF,GAAG;AACD,WAAO,CAAC,cAAc,gBAAgB,KAAK,QAAQ,gBAAgB,cAAc,GAAG,CAAC;AAAA,EACvF;AAAA,EACA,cAAc;AACZ,WAAO;AAAA,MACL,eAAe,MAAM,CAAC;AAAA,QACpB;AAAA,MACF,MAAM;AACJ,eAAO,SAAS,OAAO,KAAK,IAAI;AAAA,MAClC;AAAA,MACA,kBAAkB,MAAM,CAAC;AAAA,QACvB;AAAA,MACF,MAAM;AACJ,eAAO,SAAS,WAAW,KAAK,IAAI;AAAA,MACtC;AAAA,MACA,iBAAiB,MAAM,CAAC;AAAA,QACtB;AAAA,MACF,MAAM;AACJ,eAAO,SAAS,KAAK,KAAK,IAAI;AAAA,MAChC;AAAA,IACF;AAAA,EACF;AAAA,EACA,uBAAuB;AACrB,WAAO;AAAA,MACL,eAAe,MAAM,KAAK,OAAO,SAAS,iBAAiB;AAAA,IAC7D;AAAA,EACF;AAAA,EACA,gBAAgB;AACd,WAAO,CAAC,kBAAkB;AAAA,MACxB,MAAM;AAAA,MACN,MAAM,KAAK;AAAA,IACb,CAAC,CAAC;AAAA,EACJ;AACF,CAAC;",
  "names": []
}
