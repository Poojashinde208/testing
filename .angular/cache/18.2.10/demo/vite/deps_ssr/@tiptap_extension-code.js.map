{
  "version": 3,
  "sources": ["../../../../../../node_modules/@tiptap/extension-code/dist/index.js"],
  "sourcesContent": ["import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\n\n/**\n * Matches inline code.\n */\nconst inputRegex = /(?:^|\\s)(`(?!\\s+`)((?:[^`]+))`(?!\\s+`))$/;\n/**\n * Matches inline code while pasting.\n */\nconst pasteRegex = /(?:^|\\s)(`(?!\\s+`)((?:[^`]+))`(?!\\s+`))/g;\n/**\n * This extension allows you to mark text as inline code.\n * @see https://tiptap.dev/api/marks/code\n */\nconst Code = Mark.create({\n  name: 'code',\n  addOptions() {\n    return {\n      HTMLAttributes: {}\n    };\n  },\n  excludes: '_',\n  code: true,\n  exitable: true,\n  parseHTML() {\n    return [{\n      tag: 'code'\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['code', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands() {\n    return {\n      setCode: () => ({\n        commands\n      }) => {\n        return commands.setMark(this.name);\n      },\n      toggleCode: () => ({\n        commands\n      }) => {\n        return commands.toggleMark(this.name);\n      },\n      unsetCode: () => ({\n        commands\n      }) => {\n        return commands.unsetMark(this.name);\n      }\n    };\n  },\n  addKeyboardShortcuts() {\n    return {\n      'Mod-e': () => this.editor.commands.toggleCode()\n    };\n  },\n  addInputRules() {\n    return [markInputRule({\n      find: inputRegex,\n      type: this.type\n    })];\n  },\n  addPasteRules() {\n    return [markPasteRule({\n      find: pasteRegex,\n      type: this.type\n    })];\n  }\n});\nexport { Code, Code as default, inputRegex, pasteRegex };\n"],
  "mappings": ";;;;;;;;;;AAKA,IAAM,aAAa;AAInB,IAAM,aAAa;AAKnB,IAAM,OAAO,KAAK,OAAO;AAAA,EACvB,MAAM;AAAA,EACN,aAAa;AACX,WAAO;AAAA,MACL,gBAAgB,CAAC;AAAA,IACnB;AAAA,EACF;AAAA,EACA,UAAU;AAAA,EACV,MAAM;AAAA,EACN,UAAU;AAAA,EACV,YAAY;AACV,WAAO,CAAC;AAAA,MACN,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AAAA,EACA,WAAW;AAAA,IACT;AAAA,EACF,GAAG;AACD,WAAO,CAAC,QAAQ,gBAAgB,KAAK,QAAQ,gBAAgB,cAAc,GAAG,CAAC;AAAA,EACjF;AAAA,EACA,cAAc;AACZ,WAAO;AAAA,MACL,SAAS,MAAM,CAAC;AAAA,QACd;AAAA,MACF,MAAM;AACJ,eAAO,SAAS,QAAQ,KAAK,IAAI;AAAA,MACnC;AAAA,MACA,YAAY,MAAM,CAAC;AAAA,QACjB;AAAA,MACF,MAAM;AACJ,eAAO,SAAS,WAAW,KAAK,IAAI;AAAA,MACtC;AAAA,MACA,WAAW,MAAM,CAAC;AAAA,QAChB;AAAA,MACF,MAAM;AACJ,eAAO,SAAS,UAAU,KAAK,IAAI;AAAA,MACrC;AAAA,IACF;AAAA,EACF;AAAA,EACA,uBAAuB;AACrB,WAAO;AAAA,MACL,SAAS,MAAM,KAAK,OAAO,SAAS,WAAW;AAAA,IACjD;AAAA,EACF;AAAA,EACA,gBAAgB;AACd,WAAO,CAAC,cAAc;AAAA,MACpB,MAAM;AAAA,MACN,MAAM,KAAK;AAAA,IACb,CAAC,CAAC;AAAA,EACJ;AAAA,EACA,gBAAgB;AACd,WAAO,CAAC,cAAc;AAAA,MACpB,MAAM;AAAA,MACN,MAAM,KAAK;AAAA,IACb,CAAC,CAAC;AAAA,EACJ;AACF,CAAC;",
  "names": []
}
