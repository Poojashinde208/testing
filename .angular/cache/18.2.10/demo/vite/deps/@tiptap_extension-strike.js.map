{
  "version": 3,
  "sources": ["../../../../../../node_modules/@tiptap/extension-strike/dist/index.js"],
  "sourcesContent": ["import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\n\n/**\n * Matches a strike to a ~~strike~~ on input.\n */\nconst inputRegex = /(?:^|\\s)(~~(?!\\s+~~)((?:[^~]+))~~(?!\\s+~~))$/;\n/**\n * Matches a strike to a ~~strike~~ on paste.\n */\nconst pasteRegex = /(?:^|\\s)(~~(?!\\s+~~)((?:[^~]+))~~(?!\\s+~~))/g;\n/**\n * This extension allows you to create strike text.\n * @see https://www.tiptap.dev/api/marks/strike\n */\nconst Strike = Mark.create({\n  name: 'strike',\n  addOptions() {\n    return {\n      HTMLAttributes: {}\n    };\n  },\n  parseHTML() {\n    return [{\n      tag: 's'\n    }, {\n      tag: 'del'\n    }, {\n      tag: 'strike'\n    }, {\n      style: 'text-decoration',\n      consuming: false,\n      getAttrs: style => style.includes('line-through') ? {} : false\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['s', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n  addCommands() {\n    return {\n      setStrike: () => ({\n        commands\n      }) => {\n        return commands.setMark(this.name);\n      },\n      toggleStrike: () => ({\n        commands\n      }) => {\n        return commands.toggleMark(this.name);\n      },\n      unsetStrike: () => ({\n        commands\n      }) => {\n        return commands.unsetMark(this.name);\n      }\n    };\n  },\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-s': () => this.editor.commands.toggleStrike()\n    };\n  },\n  addInputRules() {\n    return [markInputRule({\n      find: inputRegex,\n      type: this.type\n    })];\n  },\n  addPasteRules() {\n    return [markPasteRule({\n      find: pasteRegex,\n      type: this.type\n    })];\n  }\n});\nexport { Strike, Strike as default, inputRegex, pasteRegex };\n"],
  "mappings": ";;;;;;;;;AAKA,IAAM,aAAa;AAInB,IAAM,aAAa;AAKnB,IAAM,SAAS,KAAK,OAAO;AAAA,EACzB,MAAM;AAAA,EACN,aAAa;AACX,WAAO;AAAA,MACL,gBAAgB,CAAC;AAAA,IACnB;AAAA,EACF;AAAA,EACA,YAAY;AACV,WAAO,CAAC;AAAA,MACN,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,IACP,GAAG;AAAA,MACD,OAAO;AAAA,MACP,WAAW;AAAA,MACX,UAAU,WAAS,MAAM,SAAS,cAAc,IAAI,CAAC,IAAI;AAAA,IAC3D,CAAC;AAAA,EACH;AAAA,EACA,WAAW;AAAA,IACT;AAAA,EACF,GAAG;AACD,WAAO,CAAC,KAAK,gBAAgB,KAAK,QAAQ,gBAAgB,cAAc,GAAG,CAAC;AAAA,EAC9E;AAAA,EACA,cAAc;AACZ,WAAO;AAAA,MACL,WAAW,MAAM,CAAC;AAAA,QAChB;AAAA,MACF,MAAM;AACJ,eAAO,SAAS,QAAQ,KAAK,IAAI;AAAA,MACnC;AAAA,MACA,cAAc,MAAM,CAAC;AAAA,QACnB;AAAA,MACF,MAAM;AACJ,eAAO,SAAS,WAAW,KAAK,IAAI;AAAA,MACtC;AAAA,MACA,aAAa,MAAM,CAAC;AAAA,QAClB;AAAA,MACF,MAAM;AACJ,eAAO,SAAS,UAAU,KAAK,IAAI;AAAA,MACrC;AAAA,IACF;AAAA,EACF;AAAA,EACA,uBAAuB;AACrB,WAAO;AAAA,MACL,eAAe,MAAM,KAAK,OAAO,SAAS,aAAa;AAAA,IACzD;AAAA,EACF;AAAA,EACA,gBAAgB;AACd,WAAO,CAAC,cAAc;AAAA,MACpB,MAAM;AAAA,MACN,MAAM,KAAK;AAAA,IACb,CAAC,CAAC;AAAA,EACJ;AAAA,EACA,gBAAgB;AACd,WAAO,CAAC,cAAc;AAAA,MACpB,MAAM;AAAA,MACN,MAAM,KAAK;AAAA,IACb,CAAC,CAAC;AAAA,EACJ;AACF,CAAC;",
  "names": []
}
