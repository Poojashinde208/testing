{
  "version": 3,
  "sources": ["../../../../../../node_modules/@tiptap/extension-image/dist/index.js"],
  "sourcesContent": ["import { Node, mergeAttributes, nodeInputRule } from '@tiptap/core';\n\n/**\n * Matches an image to a ![image](src \"title\") on input.\n */\nconst inputRegex = /(?:^|\\s)(!\\[(.+|:?)]\\((\\S+)(?:(?:\\s+)[\"'](\\S+)[\"'])?\\))$/;\n/**\n * This extension allows you to insert images.\n * @see https://www.tiptap.dev/api/nodes/image\n */\nconst Image = Node.create({\n  name: 'image',\n  addOptions() {\n    return {\n      inline: false,\n      allowBase64: false,\n      HTMLAttributes: {}\n    };\n  },\n  inline() {\n    return this.options.inline;\n  },\n  group() {\n    return this.options.inline ? 'inline' : 'block';\n  },\n  draggable: true,\n  addAttributes() {\n    return {\n      src: {\n        default: null\n      },\n      alt: {\n        default: null\n      },\n      title: {\n        default: null\n      }\n    };\n  },\n  parseHTML() {\n    return [{\n      tag: this.options.allowBase64 ? 'img[src]' : 'img[src]:not([src^=\"data:\"])'\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['img', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)];\n  },\n  addCommands() {\n    return {\n      setImage: options => ({\n        commands\n      }) => {\n        return commands.insertContent({\n          type: this.name,\n          attrs: options\n        });\n      }\n    };\n  },\n  addInputRules() {\n    return [nodeInputRule({\n      find: inputRegex,\n      type: this.type,\n      getAttributes: match => {\n        const [,, alt, src, title] = match;\n        return {\n          src,\n          alt,\n          title\n        };\n      }\n    })];\n  }\n});\nexport { Image, Image as default, inputRegex };\n"],
  "mappings": ";;;;;;;;AAKA,IAAM,aAAa;AAKnB,IAAM,QAAQ,KAAK,OAAO;AAAA,EACxB,MAAM;AAAA,EACN,aAAa;AACX,WAAO;AAAA,MACL,QAAQ;AAAA,MACR,aAAa;AAAA,MACb,gBAAgB,CAAC;AAAA,IACnB;AAAA,EACF;AAAA,EACA,SAAS;AACP,WAAO,KAAK,QAAQ;AAAA,EACtB;AAAA,EACA,QAAQ;AACN,WAAO,KAAK,QAAQ,SAAS,WAAW;AAAA,EAC1C;AAAA,EACA,WAAW;AAAA,EACX,gBAAgB;AACd,WAAO;AAAA,MACL,KAAK;AAAA,QACH,SAAS;AAAA,MACX;AAAA,MACA,KAAK;AAAA,QACH,SAAS;AAAA,MACX;AAAA,MACA,OAAO;AAAA,QACL,SAAS;AAAA,MACX;AAAA,IACF;AAAA,EACF;AAAA,EACA,YAAY;AACV,WAAO,CAAC;AAAA,MACN,KAAK,KAAK,QAAQ,cAAc,aAAa;AAAA,IAC/C,CAAC;AAAA,EACH;AAAA,EACA,WAAW;AAAA,IACT;AAAA,EACF,GAAG;AACD,WAAO,CAAC,OAAO,gBAAgB,KAAK,QAAQ,gBAAgB,cAAc,CAAC;AAAA,EAC7E;AAAA,EACA,cAAc;AACZ,WAAO;AAAA,MACL,UAAU,aAAW,CAAC;AAAA,QACpB;AAAA,MACF,MAAM;AACJ,eAAO,SAAS,cAAc;AAAA,UAC5B,MAAM,KAAK;AAAA,UACX,OAAO;AAAA,QACT,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF;AAAA,EACA,gBAAgB;AACd,WAAO,CAAC,cAAc;AAAA,MACpB,MAAM;AAAA,MACN,MAAM,KAAK;AAAA,MACX,eAAe,WAAS;AACtB,cAAM,CAAC,EAAC,EAAE,KAAK,KAAK,KAAK,IAAI;AAC7B,eAAO;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA,EACJ;AACF,CAAC;",
  "names": []
}
