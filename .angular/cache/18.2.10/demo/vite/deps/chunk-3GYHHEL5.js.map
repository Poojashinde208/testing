{
  "version": 3,
  "sources": ["../../../../../../node_modules/@dicebear/core/lib/utils/license.js", "../../../../../../node_modules/@dicebear/core/lib/utils/escape.js", "../../../../../../node_modules/@dicebear/core/lib/utils/prng.js", "../../../../../../node_modules/@dicebear/core/lib/utils/svg.js", "../../../../../../node_modules/@dicebear/core/lib/schema.js", "../../../../../../node_modules/@dicebear/core/lib/utils/options.js", "../../../../../../node_modules/@dicebear/core/lib/utils/color.js", "../../../../../../node_modules/@dicebear/core/lib/core.js"],
  "sourcesContent": ["import * as _ from './escape.js';\nexport function xml(style) {\n  var _a, _b, _c, _d, _e, _f, _g;\n  const title = (_a = style.meta) === null || _a === void 0 ? void 0 : _a.title;\n  const creator = (_b = style.meta) === null || _b === void 0 ? void 0 : _b.creator;\n  const source = (_c = style.meta) === null || _c === void 0 ? void 0 : _c.source;\n  const license = (_e = (_d = style.meta) === null || _d === void 0 ? void 0 : _d.license) === null || _e === void 0 ? void 0 : _e.url;\n  const rights = text(style);\n  if (!title && !creator && !source && !license && !rights) {\n    return '';\n  }\n  // https://nsteffel.github.io/dublin_core_generator/generator.html\n  return '<metadata' + ' xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"' + ' xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"' + ' xmlns:dc=\"http://purl.org/dc/elements/1.1/\"' + ' xmlns:dcterms=\"http://purl.org/dc/terms/\">' + '<rdf:RDF>' + '<rdf:Description>' + (title ? `<dc:title>${_.xml(title)}</dc:title>` : '') + (creator ? `<dc:creator>${_.xml(creator)}</dc:creator>` : '') + (source ? `<dc:source xsi:type=\"dcterms:URI\">${_.xml((_g = (_f = style.meta) === null || _f === void 0 ? void 0 : _f.source) !== null && _g !== void 0 ? _g : '')}</dc:source>` : '') + (license ? `<dcterms:license xsi:type=\"dcterms:URI\">${_.xml(license)}</dcterms:license>` : '') + (rights ? `<dc:rights>${_.xml(rights)}</dc:rights>` : '') + '</rdf:Description>' + '</rdf:RDF>' + '</metadata>';\n}\nexport function text(style) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\n  let title = ((_a = style.meta) === null || _a === void 0 ? void 0 : _a.title) ? `„${(_b = style.meta) === null || _b === void 0 ? void 0 : _b.title}”` : 'Design';\n  let creator = `„${(_d = (_c = style.meta) === null || _c === void 0 ? void 0 : _c.creator) !== null && _d !== void 0 ? _d : 'Unknown'}”`;\n  if ((_e = style.meta) === null || _e === void 0 ? void 0 : _e.source) {\n    title += ` (${style.meta.source})`;\n  }\n  let result = '';\n  if (((_g = (_f = style.meta) === null || _f === void 0 ? void 0 : _f.license) === null || _g === void 0 ? void 0 : _g.name) !== 'MIT' && ((_h = style.meta) === null || _h === void 0 ? void 0 : _h.creator) !== 'DiceBear' && ((_j = style.meta) === null || _j === void 0 ? void 0 : _j.title)) {\n    result += 'Remix of ';\n  }\n  result += `${title} by ${creator}`;\n  if ((_l = (_k = style.meta) === null || _k === void 0 ? void 0 : _k.license) === null || _l === void 0 ? void 0 : _l.name) {\n    result += `, licensed under „${(_o = (_m = style.meta) === null || _m === void 0 ? void 0 : _m.license) === null || _o === void 0 ? void 0 : _o.name}”`;\n    if ((_q = (_p = style.meta) === null || _p === void 0 ? void 0 : _p.license) === null || _q === void 0 ? void 0 : _q.url) {\n      result += ` (${style.meta.license.url})`;\n    }\n  }\n  return result;\n}", "export function xml(content) {\n  return content.replace(/&/g, '&amp;').replace(/'/g, '&apos;').replace(/\"/g, '&quot;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}", "const MIN = -2147483648;\nconst MAX = 2147483647;\nfunction xorshift(value) {\n  value ^= value << 13;\n  value ^= value >> 17;\n  value ^= value << 5;\n  return value;\n}\nfunction hashSeed(seed) {\n  let hash = 0;\n  for (let i = 0; i < seed.length; i++) {\n    hash = (hash << 5) - hash + seed.charCodeAt(i) | 0;\n    hash = xorshift(hash);\n  }\n  return hash;\n}\nexport function create(seed = '') {\n  // Ensure that seed is a string\n  seed = seed.toString();\n  let value = hashSeed(seed) || 1;\n  const next = () => value = xorshift(value);\n  const integer = (min, max) => {\n    return Math.floor((next() - MIN) / (MAX - MIN) * (max + 1 - min) + min);\n  };\n  return {\n    seed,\n    next,\n    bool(likelihood = 50) {\n      return integer(1, 100) <= likelihood;\n    },\n    integer(min, max) {\n      return integer(min, max);\n    },\n    pick(arr, fallback) {\n      var _a;\n      if (arr.length === 0) {\n        next();\n        return fallback;\n      }\n      return (_a = arr[integer(0, arr.length - 1)]) !== null && _a !== void 0 ? _a : fallback;\n    },\n    shuffle(arr) {\n      // Each method call should call the `next` function only once.\n      // Therefore, we use a separate instance of the PRNG here.\n      const internalPrng = create(next().toString());\n      // Fisher-Yates shuffle algorithm - We do not use the Array.sort method\n      // because it is not stable and produces different results when used in\n      // different browsers. See: https://github.com/dicebear/dicebear/issues/394\n      const workingArray = [...arr];\n      for (let i = workingArray.length - 1; i > 0; i--) {\n        const j = internalPrng.integer(0, i);\n        [workingArray[i], workingArray[j]] = [workingArray[j], workingArray[i]];\n      }\n      return workingArray;\n    },\n    string(length, characters = 'abcdefghijklmnopqrstuvwxyz1234567890') {\n      // Each method call should call the `next` function only once.\n      // Therefore, we use a separate instance of the PRNG here.\n      const internalPrng = create(next().toString());\n      let str = '';\n      for (let i = 0; i < length; i++) {\n        str += characters[internalPrng.integer(0, characters.length - 1)];\n      }\n      return str;\n    }\n  };\n}", "import * as escape from './escape.js';\nimport { create as createPrng } from './prng.js';\nexport function getViewBox(result) {\n  let viewBox = result.attributes['viewBox'].split(' ');\n  let x = parseInt(viewBox[0]);\n  let y = parseInt(viewBox[1]);\n  let width = parseInt(viewBox[2]);\n  let height = parseInt(viewBox[3]);\n  return {\n    x,\n    y,\n    width,\n    height\n  };\n}\nexport function addBackground(result, primaryColor, secondaryColor, type, rotation) {\n  let {\n    width,\n    height,\n    x,\n    y\n  } = getViewBox(result);\n  const solidBackground = `<rect fill=\"${primaryColor}\" width=\"${width}\" height=\"${height}\" x=\"${x}\" y=\"${y}\" />`;\n  switch (type) {\n    case 'solid':\n      return solidBackground + result.body;\n    case 'gradientLinear':\n      return `<rect fill=\"url(#backgroundLinear)\" width=\"${width}\" height=\"${height}\" x=\"${x}\" y=\"${y}\" />` + `<defs>` + `<linearGradient id=\"backgroundLinear\" gradientTransform=\"rotate(${rotation} 0.5 0.5)\">` + `<stop stop-color=\"${primaryColor}\"/>` + `<stop offset=\"1\" stop-color=\"${secondaryColor}\"/>` + `</linearGradient>` + `</defs>` + result.body;\n  }\n}\nexport function addScale(result, scale) {\n  let {\n    width,\n    height,\n    x,\n    y\n  } = getViewBox(result);\n  let percent = scale ? (scale - 100) / 100 : 0;\n  let translateX = (width / 2 + x) * percent * -1;\n  let translateY = (height / 2 + y) * percent * -1;\n  return `<g transform=\"translate(${translateX} ${translateY}) scale(${scale / 100})\">${result.body}</g>`;\n}\nexport function addTranslate(result, x, y) {\n  let viewBox = getViewBox(result);\n  let translateX = (viewBox.width + viewBox.x * 2) * ((x !== null && x !== void 0 ? x : 0) / 100);\n  let translateY = (viewBox.height + viewBox.y * 2) * ((y !== null && y !== void 0 ? y : 0) / 100);\n  return `<g transform=\"translate(${translateX} ${translateY})\">${result.body}</g>`;\n}\nexport function addRotate(result, rotate) {\n  let {\n    width,\n    height,\n    x,\n    y\n  } = getViewBox(result);\n  return `<g transform=\"rotate(${rotate}, ${width / 2 + x}, ${height / 2 + y})\">${result.body}</g>`;\n}\nexport function addFlip(result) {\n  let {\n    width,\n    x\n  } = getViewBox(result);\n  return `<g transform=\"scale(-1 1) translate(${width * -1 - x * 2} 0)\">${result.body}</g>`;\n}\nexport function addViewboxMask(result, radius) {\n  let {\n    width,\n    height,\n    x,\n    y\n  } = getViewBox(result);\n  let rx = radius ? width * radius / 100 : 0;\n  let ry = radius ? height * radius / 100 : 0;\n  return `<mask id=\"viewboxMask\">` + `<rect width=\"${width}\" height=\"${height}\" rx=\"${rx}\" ry=\"${ry}\" x=\"${x}\" y=\"${y}\" fill=\"#fff\" />` + `</mask>` + `<g mask=\"url(#viewboxMask)\">${result.body}</g>`;\n}\nexport function createAttrString(result) {\n  const attributes = {\n    xmlns: 'http://www.w3.org/2000/svg',\n    ...result.attributes\n  };\n  return Object.keys(attributes).map(attr => `${escape.xml(attr)}=\"${escape.xml(attributes[attr])}\"`).join(' ');\n}\nexport function randomizeIds(result) {\n  const prng = createPrng(Math.random().toString());\n  const ids = {};\n  return result.body.replace(/(id=\"|url\\(#)([a-z0-9-_]+)([\")])/gi, (match, m1, m2, m3) => {\n    ids[m2] = ids[m2] || prng.string(8);\n    return `${m1}${ids[m2]}${m3}`;\n  });\n}", "export const schema = {\n  type: 'object',\n  $schema: 'http://json-schema.org/draft-07/schema#',\n  properties: {\n    seed: {\n      type: 'string'\n    },\n    flip: {\n      type: 'boolean',\n      default: false\n    },\n    rotate: {\n      type: 'integer',\n      minimum: 0,\n      maximum: 360,\n      default: 0\n    },\n    scale: {\n      type: 'integer',\n      minimum: 0,\n      maximum: 200,\n      default: 100\n    },\n    radius: {\n      type: 'integer',\n      minimum: 0,\n      maximum: 50,\n      default: 0\n    },\n    size: {\n      type: 'integer',\n      minimum: 1\n    },\n    backgroundColor: {\n      type: 'array',\n      items: {\n        type: 'string',\n        pattern: '^(transparent|[a-fA-F0-9]{6})$'\n      }\n    },\n    backgroundType: {\n      type: 'array',\n      items: {\n        type: 'string',\n        enum: ['solid', 'gradientLinear']\n      },\n      default: ['solid']\n    },\n    backgroundRotation: {\n      type: 'array',\n      items: {\n        type: 'integer',\n        minimum: -360,\n        maximum: 360\n      },\n      default: [0, 360]\n    },\n    translateX: {\n      type: 'integer',\n      minimum: -100,\n      maximum: 100,\n      default: 0\n    },\n    translateY: {\n      type: 'integer',\n      minimum: -100,\n      maximum: 100,\n      default: 0\n    },\n    clip: {\n      type: 'boolean',\n      default: true\n    },\n    randomizeIds: {\n      type: 'boolean',\n      default: false\n    }\n  }\n};", "import { schema } from '../schema.js';\nexport function defaults(schema) {\n  var _a;\n  let result = {};\n  let props = (_a = schema.properties) !== null && _a !== void 0 ? _a : {};\n  Object.keys(props).forEach(key => {\n    let val = props[key];\n    if (typeof val === 'object' && undefined !== val.default) {\n      if (Array.isArray(val.default)) {\n        result[key] = [...val.default];\n      } else if (typeof val.default === 'object') {\n        result[key] = {\n          ...val.default\n        };\n      } else {\n        result[key] = val.default;\n      }\n    }\n  });\n  return result;\n}\nexport function merge(style, options) {\n  var _a;\n  let result = {\n    ...defaults(schema),\n    ...defaults((_a = style.schema) !== null && _a !== void 0 ? _a : {}),\n    ...options\n  };\n  // Return a complete copy because the styles could partially customize the\n  // options and thus modify nested objects and arrays.\n  return JSON.parse(JSON.stringify(result));\n}", "export function convertColor(color) {\n  return 'transparent' === color ? color : `#${color}`;\n}\nexport function getBackgroundColors(prng, backgroundColor, backgroundType) {\n  var _a;\n  let shuffledBackgroundColors = prng.shuffle(backgroundColor);\n  if (shuffledBackgroundColors.length <= 1) {\n    // If no background colour or only one background colour has been selected,\n    // the random sorting logic can be omitted.\n    shuffledBackgroundColors = backgroundColor;\n    // A function call should in any case make an identical number of calls to the PRNG.\n    prng.next();\n  } else if (backgroundColor.length == 2 && backgroundType == 'gradientLinear') {\n    // If the background is to be a colour gradient and exactly two background\n    // colours have been specified, do not sort them randomly. In this case, we\n    // assume that the order of the background colours was chosen on purpose.\n    shuffledBackgroundColors = backgroundColor;\n    // A function call should in any case make an identical number of calls to the PRNG.\n    prng.next();\n  } else {\n    shuffledBackgroundColors = prng.shuffle(backgroundColor);\n  }\n  if (shuffledBackgroundColors.length === 0) {\n    shuffledBackgroundColors = ['transparent'];\n  }\n  const primary = shuffledBackgroundColors[0];\n  const secondary = (_a = shuffledBackgroundColors[1]) !== null && _a !== void 0 ? _a : shuffledBackgroundColors[0];\n  return {\n    primary: convertColor(primary),\n    secondary: convertColor(secondary)\n  };\n}", "import * as svgUtils from './utils/svg.js';\nimport { merge as mergeOptions } from './utils/options.js';\nimport { create as createPrng } from './utils/prng.js';\nimport * as license from './utils/license.js';\nimport { getBackgroundColors } from './utils/color.js';\nexport function createAvatar(style, options = {}) {\n  var _a, _b, _c, _d, _e;\n  options = mergeOptions(style, options);\n  const prng = createPrng(options.seed);\n  const result = style.create({\n    prng: prng,\n    options\n  });\n  const backgroundType = prng.pick((_a = options.backgroundType) !== null && _a !== void 0 ? _a : [], 'solid');\n  const {\n    primary: primaryBackgroundColor,\n    secondary: secondaryBackgroundColor\n  } = getBackgroundColors(prng, (_b = options.backgroundColor) !== null && _b !== void 0 ? _b : [], backgroundType);\n  const backgroundRotation = prng.integer(((_c = options.backgroundRotation) === null || _c === void 0 ? void 0 : _c.length) ? Math.min(...options.backgroundRotation) : 0, ((_d = options.backgroundRotation) === null || _d === void 0 ? void 0 : _d.length) ? Math.max(...options.backgroundRotation) : 0);\n  if (options.size) {\n    result.attributes.width = options.size.toString();\n    result.attributes.height = options.size.toString();\n  }\n  if (options.scale !== undefined && options.scale !== 100) {\n    result.body = svgUtils.addScale(result, options.scale);\n  }\n  if (options.flip) {\n    result.body = svgUtils.addFlip(result);\n  }\n  if (options.rotate) {\n    result.body = svgUtils.addRotate(result, options.rotate);\n  }\n  if (options.translateX || options.translateY) {\n    result.body = svgUtils.addTranslate(result, options.translateX, options.translateY);\n  }\n  if (primaryBackgroundColor !== 'transparent' && secondaryBackgroundColor !== 'transparent') {\n    result.body = svgUtils.addBackground(result, primaryBackgroundColor, secondaryBackgroundColor, backgroundType, backgroundRotation);\n  }\n  if (options.radius || options.clip) {\n    result.body = svgUtils.addViewboxMask(result, (_e = options.radius) !== null && _e !== void 0 ? _e : 0);\n  }\n  if (options.randomizeIds) {\n    // Reduces the occurrence of ID collisions when rendering multiple avatars on one HTML page.\n    result.body = svgUtils.randomizeIds(result);\n  }\n  const attributes = svgUtils.createAttrString(result);\n  const metadata = license.xml(style);\n  const svg = `<svg ${attributes}>${metadata}${result.body}</svg>`;\n  return {\n    toString: () => svg,\n    toJson: () => {\n      var _a;\n      return {\n        svg: svg,\n        extra: {\n          primaryBackgroundColor,\n          secondaryBackgroundColor,\n          backgroundType,\n          backgroundRotation,\n          ...((_a = result.extra) === null || _a === void 0 ? void 0 : _a.call(result))\n        }\n      };\n    },\n    toDataUri: () => {\n      return `data:image/svg+xml;utf8,${encodeURIComponent(svg)}`;\n    }\n  };\n}"],
  "mappings": "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",
  "names": ["xml", "xml", "schema", "xml", "_a"]
}
